@model DonorPath.MeetUp.Models.ScheduleModel
@{
    ViewBag.Title = "Home Page";
}
@section Scripts{
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/jquerydatetimepicker")
    @Scripts.Render("~/bundles/donorpathmeetup")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryunobtrusiveajax")
    <script type="text/javascript">
        $.validator.unobtrusive.parse(document);
        FetchDemoTimes();
    </script>
}
@section Styles{
    @Styles.Render("~/Content/jquerydatetimepicker")
}

<div class="jumbotron">
    <img src="~/Content/logo.png" alt="DonorPath" style="max-width:100%;" />
    <p class="lead">
        Thanks for stopping by the DonorPath fundraising help-desk.
    </p>
    <p>Our Fundraisers in Residence are on-call to help where you need it most: building out a 12-month plan, developing a donor retention strategy, creating an impact-driven case for support, or getting an appeal letter out-the-door.</p>
    <p>Please wait while we search the calendar for available times, all appointments are in your local time zone: GMT<strong id="timezone">+0</strong></p>
    @using (Ajax.BeginForm("ScheduleAppointment", "Home", new AjaxOptions { HttpMethod = "Post", LoadingElementId = "MeetupLoad", OnFailure = "OnFailure", OnSuccess = "OnSuccess", OnBegin = "OnBegin", OnComplete = "OnComplete" }))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Name, new { disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name, null, new { @class = "help-block" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.OrganizationName, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.OrganizationName, new { disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.OrganizationName, null, new { @class = "help-block" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Email, new { disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, null, new { @class = "help-block" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Phone, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Phone, new { disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Phone, null, new { @class = "help-block" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AppointmentTime, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.AppointmentTime, new { disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.AppointmentTime, null, new { @class = "help-block" })
        </div>
        @Html.HiddenFor(m => m.TimezoneOffset)
        <input type="submit" value="Submit" id="appointmentSubmit" disabled="disabled" class="btn btn-primary btn-lg" />
        <progress id="MeetupLoad"></progress>
    }
    <div id="submitSuccess" class="alert alert-success" style="display:none">
        <strong>Success!</strong> You should receive an email shortly confirming your appointment.
    </div>
    <div id="submitFailure" class="alert alert-danger" style="display:none">
        We could not schedule your appointment at this time
    </div>
</div>
